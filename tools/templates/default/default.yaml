# Default Deployment Template
# Version: 3.1
# Platform: cloud-0.7

version: "3.1"
template_name: "default"
description: "Default multi-stack AWS infrastructure template"

metadata:
  author: "Cloud Platform"
  created: "2025-10-23"
  architecture_version: "3.1"

# Stack configurations
stacks:
  network:
    enabled: true
    layer: 1
    dependencies: []
    config:
      vpc_cidr: "10.0.0.0/16"
      availability_zones: 3

  security:
    enabled: true
    layer: 2
    dependencies:
      - network
    config:
      create_default_sg: true

  dns:
    enabled: true
    layer: 2
    dependencies:
      - network
    config:
      hosted_zone_type: "public"

  secrets:
    enabled: true
    layer: 2
    dependencies: []
    config:
      rotation_enabled: false

  authentication:
    enabled: false
    layer: 3
    dependencies:
      - security
    config:
      user_pool_name: "{{deployment_id}}-users"

  storage:
    enabled: true
    layer: 3
    dependencies:
      - security
    config:
      versioning_enabled: true
      encryption_enabled: true

  database-rds:
    enabled: false
    layer: 4
    dependencies:
      - network
      - security
    config:
      engine: "postgres"
      instance_class: "db.t3.micro"
      allocated_storage: 20

  containers-images:
    enabled: true
    layer: 4
    dependencies:
      - authentication
    config:
      scan_on_push: true

  containers-apps:
    enabled: false
    layer: 5
    dependencies:
      - network
      - security
      - storage
      - containers-images
    config:
      cpu: 256
      memory: 512

  services-ecr:
    enabled: true
    layer: 4
    dependencies: []
    config:
      image_tag_mutability: "MUTABLE"

  services-ecs:
    enabled: false
    layer: 5
    dependencies:
      - network
      - security
      - services-ecr
    config:
      cluster_name: "{{deployment_id}}-cluster"

  services-eks:
    enabled: false
    layer: 5
    dependencies:
      - network
      - security
    config:
      kubernetes_version: "1.27"
      node_instance_type: "t3.medium"

  services-api:
    enabled: false
    layer: 6
    dependencies:
      - network
      - security
      - database-rds
    config:
      api_type: "REST"

  compute-ec2:
    enabled: false
    layer: 4
    dependencies:
      - network
      - security
    config:
      instance_type: "t3.micro"
      ami: "amazon-linux-2"

  compute-lambda:
    enabled: false
    layer: 5
    dependencies:
      - network
      - security
    config:
      runtime: "python3.11"
      timeout: 300

  monitoring:
    enabled: true
    layer: 7
    dependencies:
      - network
    config:
      retention_days: 7
      create_dashboard: true
